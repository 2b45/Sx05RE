From e2374271f2919b77cb04c0d15569e5e47529d8e4 Mon Sep 17 00:00:00 2001
From: jrassa <john@rassaonline.net>
Date: Fri, 24 Feb 2017 23:19:29 -0500
Subject: [PATCH] don't enable video view if current theme doesn't support it

---
 es-app/src/views/ViewController.cpp | 4 +++-
 es-core/src/ThemeData.cpp           | 5 +++++
 es-core/src/ThemeData.h             | 2 ++
 3 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/es-app/src/views/ViewController.cpp b/es-app/src/views/ViewController.cpp
index d9093e8..ce29025 100644
--- a/es-app/src/views/ViewController.cpp
+++ b/es-app/src/views/ViewController.cpp
@@ -228,13 +228,15 @@ std::shared_ptr<IGameListView> ViewController::getGameListView(SystemData* syste
 	//if we didn't, make it, remember it, and return it
 	std::shared_ptr<IGameListView> view;
 
+	bool themeHasVideoView = system->getTheme()->hasView("video");
+
 	//decide type
 	bool detailed = false;
 	bool video	  = false;
 	std::vector<FileData*> files = system->getRootFolder()->getFilesRecursive(GAME | FOLDER);
 	for(auto it = files.begin(); it != files.end(); it++)
 	{
-		if(!(*it)->getVideoPath().empty())
+		if(themeHasVideoView && !(*it)->getVideoPath().empty())
 		{
 			video = true;
 			break;
diff --git a/es-core/src/ThemeData.cpp b/es-core/src/ThemeData.cpp
index 871e7de..9ed9e09 100644
--- a/es-core/src/ThemeData.cpp
+++ b/es-core/src/ThemeData.cpp
@@ -343,6 +343,11 @@ void ThemeData::parseElement(const pugi::xml_node& root, const std::map<std::str
 	}
 }
 
+bool ThemeData::hasView(const std::string& view)
+{
+	auto viewIt = mViews.find(view);
+	return (viewIt != mViews.end());
+}
 
 const ThemeData::ThemeElement* ThemeData::getElement(const std::string& view, const std::string& element, const std::string& expectedType) const
 {
diff --git a/es-core/src/ThemeData.h b/es-core/src/ThemeData.h
index 32702a1..408d0c5 100644
--- a/es-core/src/ThemeData.h
+++ b/es-core/src/ThemeData.h
@@ -135,6 +135,8 @@ class ThemeData
 		BOOLEAN
 	};
 
+	bool hasView(const std::string& view);
+
 	// If expectedType is an empty string, will do no type checking.
 	const ThemeElement* getElement(const std::string& view, const std::string& element, const std::string& expectedType) const;
 
